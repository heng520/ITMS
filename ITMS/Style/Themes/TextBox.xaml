<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:ITMS.Style.Themes">
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="#008AFF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border CornerRadius="10">
                        <Border.Background>
                            <ImageBrush ImageSource="/ITMS;component/Resource/logininput.png"/>
                        </Border.Background>
                        <Grid  x:Name="PART_InnerGrid">
                            <!--内容区域-->
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" 
                                                        Margin="5 0 0 0"/>

                            <TextBlock x:Name="HintMsg"  Text="{TemplateBinding  Name}" Opacity="0.5" VerticalAlignment="Center" Visibility="Collapsed" Grid.Column="1" Foreground="#81A6FF" Margin="5 0 0 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Value="">
                            <Setter TargetName="HintMsg" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Background" Value="#008AFF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border CornerRadius="10">
                        <Border.Background>
                            <ImageBrush ImageSource="/ITMS;component/Resource/logininput.png"/>
                        </Border.Background>
                        <Grid  x:Name="PART_InnerGrid">
                            <!--内容区域-->
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" 
                                                        Margin="5 0 0 0"/>

                            <!--<TextBlock x:Name="HintMsg"  Text="{TemplateBinding  Name}" Opacity="0.5" VerticalAlignment="Center" Visibility="Hidden"  Foreground="#81A6FF" Margin="5 0 0 0"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Password,Mode=TwoWay}" Value="">
                            <!--<Setter TargetName="HintMsg" Property="Visibility" Value="Visible"/>-->
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <wpf:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
    <wpf:MathMultipleConverter x:Key="MathMultipleConverter" Operation="Multiply" />
    <Style x:Key="MaterialDesignSnackbarActionButton" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignSnackbarRipple}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="24 0 24 0"/>
        <Setter Property="Margin" Value="24 -14 -24 -14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}">
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSnackbarMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UnSnackbar" TargetType="wpf:Snackbar">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{DynamicResource grey700}" />
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.01,0.01" EndPoint="1,1" Opacity="0.9" >
                    <GradientStop Offset="0.01" Color="{DynamicResource lightbluea400C}"/>
                    <GradientStop Offset="1" Color="{DynamicResource deeppurple400C}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ActionButtonStyle" Value="{StaticResource MaterialDesignSnackbarActionButton}" />
        <Setter Property="MinWidth" Value="288" />
        <Setter Property="MaxWidth" Value="568" />
        <Setter Property="Padding" Value="24 14 24 14" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="wpf:Snackbar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ActivateStoryboard" Duration="0:0:0.3">
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Tag" From="0" To="1" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" To="0" BeginTime="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:0.075" Duration="0:0:0.225">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="DeactivateStoryboard" Duration="0:0:0.3">
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Tag" From="1" To="0" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <StackPanel x:Name="Root">
                        <StackPanel.Tag>
                            <system:Double>0.0</system:Double>
                        </StackPanel.Tag>
                        <StackPanel.Height>
                            <MultiBinding Converter="{StaticResource MathMultipleConverter}">
                                <Binding ElementName="ContentBorder" Path="ActualHeight"/>
                                <Binding RelativeSource="{RelativeSource Self}" Path="Tag"/>
                            </MultiBinding>
                        </StackPanel.Height>
                        <Border x:Name="ContentBorder"
                    Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True"
                    VerticalAlignment="Stretch"
                    MinHeight="24">
                            <ContentPresenter Content="{TemplateBinding Message}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                x:Name="ContentPresenter" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ActivateStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource DeactivateStoryboard}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="ContentBorder" Property="CornerRadius" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HorizontalAlignment" Value="Stretch">
                <Setter Property="MaxWidth" Value="{x:Static system:Double.MaxValue}">
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>