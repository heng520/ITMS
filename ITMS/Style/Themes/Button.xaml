<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:themes="clr-namespace:ITMS.Style"
                    >
    <Style x:Key="windowBtn" TargetType="Button">
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="46"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#2D7DFF" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Stylus.IsTapFeedbackEnabled" Value="False" />
        <Setter Property="Stylus.IsTouchFeedbackEnabled" Value="False" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="OverBorder" BorderThickness="0 1 0 0" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="MinimizeIcon"
                                                                   Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"
                                                                   FontSize="{TemplateBinding FontSize}" FontFamily="{DynamicResource IconFont}"
                                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <!-- When the pointer is over the button. -->
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsStylusOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#FF8AD4F3" />
            </MultiTrigger>
            <!-- When the pointer is pressed. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="AreAnyTouchesOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#7FFFFFFF" />
                <Setter Property="Background" Value="#3F000000" />
            </MultiTrigger>
            <!-- When the touch device is pressed. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="AreAnyTouchesOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#7FFFFFFF" />
                <Setter Property="Background" Value="#7FFFFFFF" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Style.Button.Close" TargetType="Button" BasedOn="{StaticResource windowBtn}">
        <Style.Triggers>
            <MultiTrigger>
                <!-- When the pointer is over the button. -->
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsStylusOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#E81123" />
            </MultiTrigger>
            <!-- When the pointer is pressed. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="AreAnyTouchesOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="#F1707A" />
            </MultiTrigger>
            <!-- When the touch device is pressed. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="AreAnyTouchesOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="#F1707A" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="Button" x:Key="HomeBtn">
        <Setter Property="Width" Value="246"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <Grid>
                            <Image x:Name="backImg" Source="{Binding Path=(themes:ImageButton.BackImg),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}" Stretch="Fill"/>
                            <ContentPresenter x:Name="font" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="{Binding Path=(themes:ImageButton.BackImgClick),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}"/>
                        </Trigger>
                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="{Binding Path=(themes:ImageButton.BackImgClick),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LeftImgBtn">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="backImg" Source="{Binding Path=(themes:ImageButton.BackImg),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}" Stretch="Fill" />
                            <ContentPresenter x:Name="font" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#007EFF"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#007EFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" >
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <ContentPresenter x:Name="font" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#007EFF"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#007EFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseButton" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="16 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Width" Value="80"/>
    </Style>
    
    <Style x:Key="Blue" BasedOn="{StaticResource BaseButton}" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.4,0" EndPoint="1,1" Opacity="1" >
                    <GradientStop Offset="0.06" Color="#2983f6"/>
                    <GradientStop Offset="1" Color="#42bffe"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#ffff"/>
        <Setter Property="BorderBrush" Value="#41C2FC"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="4">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF31AAFD"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2a89a4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Cancel" BasedOn="{StaticResource BaseButton}" TargetType="Button">
        <Setter Property="Background" Value="#FFFF"/>
        <Setter Property="Foreground" Value="#2983f6"/>


        <Setter Property="BorderBrush" Value="#2983f6"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFE7F3FB"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFBBF0FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground"  Value="#54aadd"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="4">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="footBtn" TargetType="Button">
        <Setter Property="Width" Value="107"/>
        <Setter Property="Height" Value="97"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <Grid>
                            <Image x:Name="backImg" Source="{Binding Path=(themes:ImageButton.BackImg),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}" Stretch="Fill"/>
                            <ContentPresenter x:Name="font" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="{Binding Path=(themes:ImageButton.BackImgClick),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}"/>
                        </Trigger>
                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="{Binding Path=(themes:ImageButton.BackImgClick),RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>